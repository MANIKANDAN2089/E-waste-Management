{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANIKANDAN\\\\Downloads\\\\fullstack-ewaste-project\\\\frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport default function Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const adjustTextareaSize = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      textarea.style.height = `${Math.min(textarea.scrollHeight, 200)}px`;\n\n      // Set min and max width for textarea\n      const minWidth = 100; // px\n      const maxWidth = 500; // px\n\n      // Temporarily reset width to 'auto' to measure scrollWidth\n      textarea.style.width = 'auto';\n      const newWidth = Math.min(Math.max(textarea.scrollWidth, minWidth), maxWidth);\n      textarea.style.width = `${newWidth}px`;\n    }\n  };\n  useEffect(() => {\n    adjustTextareaSize();\n  }, [input]);\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [input]);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setInput('');\n    setLoading(true);\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      sender: 'user'\n    }]);\n    try {\n      const res = await fetch(`${API}/chatbot/query`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: userMessage\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMessages(prev => [...prev, {\n          text: data.answer,\n          sender: 'bot',\n          confidence: data.confidence\n        }]);\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: \"Sorry, I'm having trouble understanding that right now.\",\n        sender: 'bot',\n        error: true\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"E-Waste AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Powered by E-waste AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), msg.confidence && msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-meta\",\n          children: [\"Confidence: \", (msg.confidence * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textareaRef,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Type a message... (Shift+Enter for new line)\",\n        rows: 1,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || !input.trim(),\n        children: loading ? '...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"u3IqX78EGu3jH21ySfd/ul7ThoQ=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactMarkdown","jsxDEV","_jsxDEV","API","process","env","REACT_APP_API_URL","Chatbot","_s","messages","setMessages","input","setInput","loading","setLoading","messagesEndRef","textareaRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","adjustTextareaSize","textarea","style","height","Math","min","scrollHeight","minWidth","maxWidth","width","newWidth","max","scrollWidth","adjustTextareaHeight","sendMessage","e","preventDefault","trim","userMessage","prev","text","sender","res","fetch","method","headers","body","JSON","stringify","question","data","json","ok","answer","confidence","Error","error","handleKeyDown","key","shiftKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","toFixed","ref","onSubmit","value","onChange","target","onKeyDown","placeholder","rows","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/MANIKANDAN/Downloads/fullstack-ewaste-project/frontend/src/pages/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst API = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nexport default function Chatbot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const textareaRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const adjustTextareaSize = () => {\r\n  const textarea = textareaRef.current;\r\n  if (textarea) {\r\n    textarea.style.height = 'auto';\r\n    textarea.style.height = `${Math.min(textarea.scrollHeight, 200)}px`;\r\n\r\n    // Set min and max width for textarea\r\n    const minWidth = 100; // px\r\n    const maxWidth = 500; // px\r\n\r\n    // Temporarily reset width to 'auto' to measure scrollWidth\r\n    textarea.style.width = 'auto';\r\n    const newWidth = Math.min(Math.max(textarea.scrollWidth, minWidth), maxWidth);\r\n    textarea.style.width = `${newWidth}px`;\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  adjustTextareaSize();\r\n}, [input]);\r\n\r\n  useEffect(() => {\r\n    adjustTextareaHeight();\r\n  }, [input]);\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setInput('');\r\n    setLoading(true);\r\n    \r\n    setMessages(prev => [...prev, { text: userMessage, sender: 'user' }]);\r\n\r\n    try {\r\n      const res = await fetch(`${API}/chatbot/query`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ question: userMessage })\r\n      });\r\n      \r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMessages(prev => [...prev, {\r\n          text: data.answer,\r\n          sender: 'bot',\r\n          confidence: data.confidence\r\n        }]);\r\n      } else {\r\n        throw new Error(data.error);\r\n      }\r\n    } catch (error) {\r\n      setMessages(prev => [...prev, {\r\n        text: \"Sorry, I'm having trouble understanding that right now.\",\r\n        sender: 'bot',\r\n        error: true\r\n      }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-header\">\r\n        <h2>E-Waste AI Assistant</h2>\r\n        <p>Powered by E-waste AI</p>\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`message ${msg.sender}`}>\r\n            <div className=\"message-text\">\r\n              <ReactMarkdown>{msg.text}</ReactMarkdown>\r\n            </div>\r\n            {msg.confidence && msg.sender === 'bot' && (\r\n              <div className=\"message-meta\">\r\n                Confidence: {(msg.confidence * 100).toFixed(1)}%\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {loading && (\r\n          <div className=\"message bot\">\r\n            <div className=\"typing-indicator\">\r\n              <span></span><span></span><span></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={sendMessage} className=\"chat-input\">\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder=\"Type a message... (Shift+Enter for new line)\"\r\n          rows={1}\r\n          disabled={loading}\r\n        />\r\n        <button type=\"submit\" disabled={loading || !input.trim()}>\r\n          {loading ? '...' : 'Send'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}